#include<stdio.h> 
 
int main() 
{ 
 
  int n,i,n1;
	printf("Enter no. of process:-\t");
	scanf("%d",&n);
	n1=n;
	printf("\nArrival time of atleast anyone process must be start from 0\n\n");
	int arrival[10],burst[10],kiru[10];
	for(i=0;i<n;i++){
	printf("process %d:\n",i+1);
	printf("Enter Cpu arrival time:\t",i+1);
	scanf("%d",&arrival[i]); 
    printf("Enter Cpu burst time:\t",i+1);  
    scanf("%d",&burst[i]); 
	kiru[i]=burst[i];
	printf("\n");
	}
	int timequntm;
	printf("Enter Time Quantum");
	scanf("%d",&timequntm);
	printf("\n\n\n");
	printf("********************************************************"); 
	printf("\nProcess\t|Turnaround Time|Waiting Time\n\n"); 
	int pathro=0,pa=0;
	int kp=0;
	float waiting,turnaround;
	for(pathro=0,pa=0;n1!=0;) 
  { 
    if(kiru[pa]<=timequntm && kiru[pa]>0) 
    { 
      pathro=pathro+kiru[pa]; 
      kiru[pa]=0; 
      kp=1; 
    } 
    else if(kiru[pa]>0) 
    { 
      kiru[pa]=kiru[pa]-timequntm; 
      pathro=pathro+timequntm; 
    } 
    if(kiru[pa]==0 && kp==1) 
    { 
      n1--; 
      printf("P[%d]\t|\t%d\t|\t%d\n",pa+1,pathro-arrival[pa],pathro-arrival[pa]-burst[pa]); 
      waiting=waiting+pathro-arrival[pa]-burst[pa]; 
      turnaround=turnaround+pathro-arrival[pa]; 
      kp=0; 
    } 
    if(pa==n-1) 
      pa=0; 
    else if(arrival[pa+1]<=pathro) 
      pa++; 
    else 
      pa=0; 
  } 
  printf("\nAverage Waiting Time= %f\n",waiting/n); 
  printf("Avg Turnaround Time = %f",turnaround/n); 
}
